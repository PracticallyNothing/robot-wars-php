#+TITLE: Курсова работа по Сървърно програмиране
#+SUBTITLE: Стратегическа игра в реално време - Robot Wars
#+AUTHOR: Марио Кръстев - Фак. номер: 119909
#+EMAIL: practicallynothingatall@gmail.com
#+EMAIL: 119909@students.ue-varna.bg
#+DATE: <2023-12-19 Tue>
#+LANGUAGE: bg

#+OPTIONS: toc:3

* Какво представлява играта?
* Достъп до уебсайта
** Кодът е достъпен в Github
Кодът на уебсайта е публично достъпен през сайта Github. Той може да бъде достъпен посредством този линк: https://github.com/PracticallyNothing/robot-wars-php/.
* Използвани технологии
Освен изискваните от заданието технологии в XAMPP стака и JQuery, две други технологии бяха използвани в разработката на този проект.

** HTMX
[[https://htmx.org][HTMX]] е библиотека, която улеснява разработката на интерактивни уебсайтове като предлага начин за комуникиране със сървър без нуждата от ръчно написан Javascript код.

Улеснението е поради начинът на работа с библиотеката - HTMX позволява да маркираме HTML елементи със специални атрибути, започващи с =hx-= (=hx-get=, =hx-post=, =hx-put=, =hx-swap=, т.н.). Когато ги маркираме, HMTX просто подава заявка към сървъра и, когато се върне HTML отговор, замества/добавя избраното от разработчика съдържание с дошлото в отговора.

HTMX се използва в реализацията на [[*Заглавна страница][заглавната страница]].

#+CAPTION: Без HTMX
#+BEGIN_SRC html
<form id="my-form" action="my-action" method="POST">
    <input type="text"/>
    <input type="submit"/>

    <p id="error"></p>
</form>

<script>
  $.onload(() => {
    $("my-form").submit((e) => {
        e.preventDefault();

        let response = $.ajax(...);
        // Проверки за грешка
        // Показване на ново съдържание
    })
  })
</script>
#+END_SRC

#+CAPTION: Със HTMX
#+BEGIN_SRC html
<form id="my-form" action="my-action" method="POST">
    <input type="text"/>
    <input type="submit"/>

    <p id="error"></p>
</form>

<!-- Можем да пропуснем <script> тага и директно да вложим логиката в сървъра. -->
#+END_SRC
** TailwindCSS
* База данни - как работи?
** Архитектура
** Скрипт за създаване
Тук е приложен пълният код на скриптът за инициализиране на базата данни.

Актуална версия на кода може да бъде открита на Github страницата на проекта през [[https://github.com/PracticallyNothing/robot-wars-php/blob/main/create_db.sql][този линк]].

#+BEGIN_SRC sql
drop table if exists GameCommands;
drop table if exists Units;
drop table if exists Games;
drop table if exists UnitBlueprints;
drop table if exists Images;
drop table if exists Users;

create table Users (
  Id integer AUTO_INCREMENT,
  Username Varchar(256) unique not null,
  Email Varchar(256) not null,
  PasswordHash Varchar(512) not null,
  Rank int default 1,

  primary key (Id)
);

insert into Users(Id, Username, Email, PasswordHash, Rank) values
(NULL, 'Mario Krastev', '119909@students.ue-varna.bg', '$2y$10$RgZLLf5L0gqmMxdXnJyzUeVzw6AxjvGyxvqxA9OKFFe88vtW4OyS6', 1);

create table Images (
  Id integer AUTO_INCREMENT,
  Name varchar(256) unique not null,
  ImageData blob,

  primary key (Id)
);

create table UnitBlueprints(
  Id integer AUTO_INCREMENT,
  Name varchar(32) not null,
  Caption varchar(255),
  Description text,
  IconId int,

  Cost integer,
  SecondsToBuild integer,
  Speed float,

  primary key (Id),
  foreign key (IconId) references Images(Id)
);

insert into UnitBlueprints(Name, Caption, Cost, SecondsToBuild, Speed) values
('miner',        'Miner',          100,  7, 3.0),
('support',      'Support Truck',  150, 14, 5.0),
('flamethrower', 'Firethrower',    500, 18, 5.0),
('machineguns',  'Machinegunners', 300, 15, 7.0),
('artillery',    'Artillery',      800, 30, 1.0);

create table Games(
  Id integer AUTO_INCREMENT,
  UserId integer not null,
  DatetimeCreated timestamp not null default current_timestamp,
  DatetimeEnded timestamp null default null,

  primary key (Id),
  constraint FK_Game_User
    foreign key (UserId)
    references Users(Id)
);

create table Units(
  Id integer AUTO_INCREMENT,
  GameId integer not null,
  BlueprintId integer not null,

  DatetimeDied timestamp null default null,

  primary key (Id),
  constraint FK_Unit_Game
    foreign key (GameId)
    references Games(Id),
  constraint FK_Unit_UnitBlueprint
    foreign key (BlueprintId)
    references UnitBlueprints(Id)
);

create table GameCommands(
  Id integer AUTO_INCREMENT,
  GameId integer not null,

  CommandType enum('build_unit', 'move') not null,
  UnitBlueprintId integer,

  Sector Char(2),
  UnitId int,
  UnitStartXPos float,
  UnitStartYPos float,

  DatetimeIssued timestamp not null default current_timestamp,
  DatetimeEnd timestamp not null,

  primary key (Id),
  constraint FK_GameCommand_Game
    foreign key (GameId)
    references Games(Id),
  constraint FK_GameCommand_UnitBlueprint
    foreign key (UnitBlueprintId)
    references UnitBlueprints(Id),
  constraint FK_GameCommand_Unit
    foreign key (UnitId)
    references Units(Id)

);
#+END_SRC
* Структура на уебсайта
** Заглавна страница
При първоначално посещение на уебсайта, играчът ще бъде изпратен на екранът за вход/регистрация:

[[file:./screenshots/index.png]]

От тук потребител може да влезе с паролата и потребителското си име или да регистрира нов профил.

При опит за вход със сгрешена парола или потребителско име, под формата за вход ще се появи червен текст, който описва проблема:

[[file:./screenshots/index-incorrect-username-or-password.png]]

Ако страницата бъде посетена след като играч е влязъл, той директно бива препратен на [[*Lobby - страница за стартиране на игра]["Lobby" страницата]].

** Lobby - страница за стартиране на игра
След като потребител въведе правилна парола за вход, той бива изпратен на "Lobby" страницата. От тази страница той може да стартира игра като натисне един от двата големи бутона именовани "PvE Singleplayer" (Player vs Environment, играчът ще играе срещу компютърът) и "PvE Coop". Поради ограниченото време за разработка, само бутонът "PvE Singleplayer" е функционален.

[[file:./screenshots/lobby.png]]

Ако играчът вече е стартирал игра, но я напусне, когато посети отново "Lobby" екранът, бутонът
"PvE Singleplayer" ще има добавен текстът "You've already started a game!". При натискане на бутонът за "PvE Singleplayer", играчът ще бъде върнат в стартираната игра.

[[file:./screenshots/lobby-game-started.png]]

В горната дясна част на екрана е добавен бутон за разлогване. Ако играчът е влязъл от публично място, иска да влезе от друг профил или иска да излезе от профила си по други причини, той може да го направи през бутона /"Log Out"/.

Ако потребителят се опита да посети страницата без да е влязъл, той бива върнат обратно на [[*Заглавна страница][страницата за вход]].

** Прозорец за игра

[[file:./screenshots/whole-screen-screenshot.png]]

*** Карта
Картата е основната част от играта, която играчът ще наблюдава по време на игра. Тя го информира за състоянието

*** Страничен панел
Страничният панел е съставен от три подпрозореца, които могат да биват отваряни от играча посредством бутоните на върха на екрана.

**** Подпрозорец за строене на единици
Подпрозорецът за строене на единици позволява на играча да избере между достъпните му единици и да подаде команда за тяхното строене. До единицата е написано името, цената и времето, което ще отнеме, за да бъде построена. Всяка единица е бутон, който може да бъде натиснат за да се изпрати команда до сървъра за строене на единицата.

[[file:./screenshots/build-units-panel.png]]

Изпращането на заявката до сървъра се осъществява използвайки AJAX през библиотеката jQuery. След получаване на заявката, сървърът изчислява и връща на клиента информация кога ще завърши строенето на пожеланата единица. Щом получи отговора, клиентът, чрез Javascript, визуализира в [[*Подпрозорец "Опашка на строежа на единици"]], че единицата е била подадена за строене, като обновява името на подпрозореца да отразява колко единици има в опашката.

**** Подпрозорец "Опашка на строежа на единици"
Този подпрозорец показва на играча всички единици, за които той е изпратил команди да бъдат построени. Първата единица бива динамично обновявана, за да може играчът да знае точно след колко време ще бъде завършен строежът ѝ. Когато единица бъде построена, тя се появява в центъра на картата и може да бъде изпратена в избран от играча квадрант.

[[file:./screenshots/queue-panel.png]]

**** Подпрозорец за резултат и напускане на играта
Подпрозорецът за резултат на играта позволява на играча да погледне статистически как се справя с играта. Показани са следните елементи:
- колко време е оцелял играчът
- колко ресурси е успял да събере играчът
- колко извънземни е успял да убие
- колко единици е загубил

Този подпрозорец също позволява на играча да напусне играта, ако сметне че ситуацията е безнадеждна. След като напусне, играта бива маркирана за приключена в базата данни и играчът може да стартира нова.

[[file:./screenshots/score-panel.png]]

* Техническа реализация, постижения
** Сървърът няма активна част
В една стандартна игра сървърът би бил направен в активен стил - процес, който постоянно работи във фона, за да следи и обновява състоянието на играта. Този подход е често срещан поради многото му предимства, измежду които са:
- по-малко натоварване на системни ресурси, тъй като сървърът ще обновява само малка част от състоянието на играта с всяка команда и то само когато е нужно
- по-лесна имплементация - сървърът директно ще манипулира състоянието на играта в паметта вместо всеки път да се консултира с база данни, която съдържа историческа информация за играта

Въпреки допълнителната трудност и ограниченията, подходът, избран за проекта, има няколко свои предимства.
*** Издръжливост при сривове
При активният стил на имплементиране, сървърът държи цялото състояние на играта в оперативната памет. Това означава, че при срив на сървъра, спиране на тока или други проблеми, активният сървър ще загуби информацията за всички игри. Разработчикът трябва да вземе специални мерки, за да може сървърът да не губи всичката информация при такъв инцидент.

От друга страна, подходът, избран от този проект, води до издръжливост при такива инциденти, поради факта, че историческата информация за играта се пази в база данни. При срив, сървърът просто може да бъде стартиран отново без загуба на данни.

*** Всеки един момент от играта може да бъде възстановен
Тъй като моделът на работа на играта изисква всичката информация да е налична през цялото време, това означава че като бонус получаваме система за възстановяване състоянието на играта във всеки един момент без почти никакво усилие.

Това ни позволява сравнително лесно да имплементираме повторно пускане на запис на играта, тъй като това е същият процес, използван от истинската игра, просто с добавената възможност да сменяме в кой момент се намираме (играчът в истинската игра винаги се намира на краят на записа).

** Клиентът и сървърът винаги са в синхрон
За да може играчът да вижда възможно най-правилно състоянието на играта, при всяко зареждане на [[*Прозорец за игра][прозорецът за игра]] синхронизира състоянието на играта със сървъра. Играчът може да затвори прозореца на играта и да го отвори отново в по-късен момент и ще получи актуална картина на случващото се в играта.

В следният запис на екрана можете да видите как докато се движат единици и също са сложени единици на опашката, бутонът за обновяване на страницата бива натискан многократно в кратък период, без прозорецът за игра да губи точността си:

[[file:./screenshots/rapid-refresh-doesnt-screw-up-state.mp4]]

* Липсващи елементи, познати бъгове, насоки за развитие
Поради ограниченото време нямаше възможност да се имплементира цялата идея, описана в "[[*Какво представлява играта?]]".

** Липсващи елементи и посоки за развитие
*** Няма извънземни!
Един от важните елементи на играта - противниците - отсъства! Това означава, че макар играта да симулира броят събрани ресурси и движението на единиците правилно, за играчът не съществува риск да загуби и няма предизвикателство или смисъл да играе.

Поради ограниченото време, този елемент отсъства от тази версия на проекта.

*** Административни функции
Всички потребители на уебсайта имат зададен в базата данни ранг, но той е нищозначещ, тъй като по-висок ранг не дава никакви допълнителни права/предимства. Би бил полезен административен екран, в който администратор на сайта да може да преглежда играчите, да променя настройките на играта и да проверява дали резултатите на играчите са истински като гледа записи на игрите им.

*** Персонализация на профила
Макар да има заделена таблица =Images= с цел потребител да може да качи собствена профилна снимка, функционалността за персонализация не е реализирана.

** Познати бъгове и проблеми
Следните бъгове са познати по време на разработка. Това не означава, че няма други - този списък не претендира да е пълен.

*** Единиците понякога отнемат много повече време за направа
По неясна причина единиците в опашката за строене понякога отнемат 3-4 пъти по-дълго да бъдат построени, отколкото би трябвало.

*** Броят изкопани минерали не се актуализира
В момента сървъра изчислява колко минерали е събрал играчът, но клиентът не симулира събирането на ресурси и [[*Подпрозорец за резултат и напускане на играта][панелът за резултат]] показва статично число до обновяване на страницата.

*** Единиците се припокриват
Няколко единици могат да застанат в един и същи квадрант, като това ги кара да застават перфектно един върху друг. Това пречи на играчът да избере коя от двете единици да премести.
